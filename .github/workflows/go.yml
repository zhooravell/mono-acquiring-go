# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m --verbose
        env:
          GOPROXY: direct

  build-and-test:
    name: Build & Test (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false
      - name: Install dependencies
        run: GOPROXY=direct go mod tidy

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./... -race -coverprofile=coverage.txt -covermode=atomic

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          file: ./coverage.txt
#          fail_ci_if_error: false
